QSP-Game функция округления целых чисел
args[0] - число
args[1] - разрядность округления: 10 - десятки, 100 - сотни, 1000 - тысячи, и т.д.; если не указано принимается равным 100.
$args[2] - правило округления числа: [up] - в сторону увеличения; [down] - в сторону уменьшения; пустое значение - по правилам округления: последнее число перед округляемым разрядом меньше пяти - округляем в меньшую сторону, больше четырёх - в большую.
!@pp:if(em_even):include
# em.even
local module, at49, $minus
!@ если разрядность не задана, или задана неверно, выставляем разрядность на 100:
if args[1]=0 or strcomp($str(args[1]),'^1[0]+$')=0: args[1]=100
!@ if args[1]>args[0]: result=args[0] & exit	& !@ если разрядность округления больше числа, то число возвращается, как есть
if args[0]<0: args[0]=-args[0] & $minus='-'	& !@ вводим переменную-маркер отрицательного числа
$args[2]=$lcase($args[2])	& !@ переводим в нижний регистр для удобства

if instr($args[2],'[up]')=0 and instr($args[2],'[down]')=0:
	module=args[0] mod args[1]	& !@ остаток от деления
	at49=5*args[1]/10-1	& !@ ограничениеб по которому оценивается, в какую сторону проводить округление
	if module>at49: $args[2]='[up]' else $args[2]='[down]'	& !@ вариантов округления
end
if instr($args[2],'[up]')<>0:
	!@ если нужно округлить в сторону увеличения
	result = (args[0]/args[1]+1)*args[1]
elseif instr($args[2],'[down]')<>0:
	result = (args[0]/args[1])*args[1]
end
!@ выставляем результат
if $minus='-':
	result=-result
end
--- em.even ---------------------------------
!@pp:endif

Функция не использует другие функции библиотеки

Пример вызова

@em.even(549,10,"[up]")
@em.even(549,10,"[down]")
@em.even(549,1000)
@em.even(-5545,12)
@em.even(45599)
@em.even(-45599)