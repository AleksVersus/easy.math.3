QSP-Game ПЕРЕМЕННАЯ С НАИБОЛЬШИМ ЗНАЧЕНИЕМ
Функция вычисляет название переменной с наибольшим значением. Не производит поиск среди текстовых значений. Вы можете легко исправить данную функцию, если вам нужно проводить поиск среди текстовых значений.
В качестве аргументов передаются названия переменных или ячеек массивов.
Первый аргумент рассматривается, как список, поэтому в него можно вносить несколько названий переменных через запятую. При этом нельзя, чтобы все эти названия содержали в себе запятые. Например mass["12,45"] - недопустимо. Такие названия можно перечислять в последующих аргументах, либо при указании использовать вместо запятой строку %&#44;% - это сочетание будет автоматически заменяться на запятую при обработке переменной: mass["12%&#44;%45"]
кроме того каждое название переменной может быть отмечено ключом /arr, тогда указанная переменная будет рассматриваться как массив.
Последний аргумент может содержать управляющие конструкции:
[list] - в результат выдаётся список переменных с максимальным значением, если это значение в нескольких переменных совпадает.
[max] - поиск максимального значения (по умолчанию)
[min] - поиск минимального значения, имеет приоритет над [max], если указаны оба.
!@pp:if(em_maxvar):include
# em.maxVar
args['size']=arrsize('args') & local easy_math_varname	& !@ инициализируем аргументы и локальные переменные
$args['\n']=''
$args['>or<']='>'
@em.str.inArr($args[0],'$easy_math_varname',',','NOTSPACE [strip]')

!@ этот цикл добирает оставшиеся переменные
loop args['i']=1 while args['i']<args['size'] and args['stop']=0 step args['i']+=1:
	$args['comm']=$strfind($lcase($args[args['i']]),'\[(list|max|min)\]')
	if $args['comm']<>'' or $args[args['i']]='':
		args['stop']=1
		$args[args['i']]=$lcase($args[args['i']])
		if instr($args[args['i']],'[list]')<>0: $args['list']='[list]'
		if instr($args[args['i']],'[min]')<>0:
			$args['>or<']='<'
		elseif instr($args[args['i']],'[max]')<>0:
			$args['>or<']='>'
		end
	else:
		$easy_math_varname[]=$args[args['i']]
	end
end

!@ следующий цикл перебирает переменные, помещая их значения и названия в отдельный массив
if $args['>or<']='>': args['maximal_result']=-2147483647
if $args['>or<']='<': args['maximal_result']=2147483647
loop args['i'],args['s']=0,arrsize('$easy_math_varname') while args['i']<args['s'] step args['i']+=1:
	$easy_math_varname[args['i']]=$replace($easy_math_varname[args['i']],'%&#44;%',',')
	if $mid($easy_math_varname[args['i']],len($easy_math_varname[args['i']])-3)='/arr':
		!@ если имеется ввиду не имя переменной, а имя массива
		$args['arr']=$mid($easy_math_varname[args['i']],1,len($easy_math_varname[args['i']])-4)
		if $args['>or<']='>': args['maxarr']=max($args['arr'])
		if $args['>or<']='<': args['maxarr']=min($args['arr'])
		if (args['maxarr']>=args['maximal_result'] and  $args['>or<']='>') or (args['maxarr']<=args['maximal_result'] and  $args['>or<']='<'):
			if args['maxarr']>args['maximal_result'] and $args['>or<']='>': $args['list_of_var']=''
			if args['maxarr']<args['maximal_result'] and $args['>or<']='<': $args['list_of_var']=''
			
			loop args['pos'],args['run']=-1,1 while args['run']:
				args['pos']=arrpos($args['arr'],args['maxarr'],args['pos']+1)
				if (args['pos']<>-1 and args['mp']<>args['pos']) or args['pos']=0:
					args['mp']=args['pos']
					$args['list_of_var']+="<<$args['arr']>>[<<args['pos']>>]"+$args['\n']
				else
					args['run']=0
				end
				args['maximal_result']=args['maxarr']
			end
		end
	else:
		!@ если имеется ввиду имя переменной
		$args['simpl']=$dyneval("
			$result=''
			if <<$easy_math_varname[args['i']]>> <<$args['>or<']>> <<args['maximal_result']>>:
				$result='over' & ! больше
			elseif <<$easy_math_varname[args['i']]>> = <<args['maximal_result']>>:
				$result='equals' & ! равно
			end
			")
		if $args['simpl']<>'':
			if $args['simpl']='over': $args['list_of_var']=''
			$args['list_of_var']+=$easy_math_varname[args['i']]+$args['\n']
			args['maximal_result']=dyneval("result=<<$easy_math_varname[args['i']]>>")
		end
	end
end
if $args['list']<>'':
	$args['rn']='
'
	$result=$replace($mid($args['list_of_var'],1,len($args['list_of_var'])-1),$args['\n'],$args['rn'])
else
	$result=$mid($args['list_of_var'],1,instr($args['list_of_var'],$args['\n'])-1)
end
- em.maxVar
!@pp:endif

Функция использует функции em.str.getWord и str.inArray

!@pp:if(em_maxvar!=True):nopp
!@pp:var(em_str_inarr)
!@pp:var(em_str_getWord)
!@pp:endif

Внимание!!! Функция собрана на ARGS дабы избежать пересечения с большинством возможных имён переменных. Не пытайтесь передавать в функцию значения массива args или easy_math_varname

Обратите внимание!!! Здесь нельзя просто убрать кавычки у dyneval в первом случае, поскольку подставляется не только имя переменной, но так же и знак выражения. Если избавляться от кавычек, то придётся переписать данный кусок кода в более развёрнутом виде с дополнительными условиями.

old_mass[0]=788
old_mass[1]=136
old_mass[2]=788
old_mass[3]=177
old_mass[4]=75
old_mass[5]=97
old_mass[6]=649
old_mass[7]=75

old_mass_1[0]=774
old_mass_1[1]=587
old_mass_1[2]=513
old_mass_1[3]=394
old_mass_1[4]=332
old_mass_1[5]=247
old_mass_1[6]=724
old_mass_1[7]=660
old_mass_1[8]=806
old_mass_1[9]=130

oldmass[0]=828
oldmass[1]=69
oldmass[2]=865
oldmass[3]=473
oldmass[4]=529
oldmass[5]=965
oldmass[6]=666
oldmass[7]=44
oldmass[8]=480
oldmass[9]=108

old_mass_2[0]=925
old_mass_2[1]=3
old_mass_2[2]=446
old_mass_2[3]=853
old_mass_2[4]=152
old_mass_2[5]=756
old_mass_2[6]=933
old_mass_2[7]=638
old_mass_2[8]=286
old_mass_2[9]=86

oldold[0]=310
oldold[1]=780
oldold[2]=544
oldold[3]=325
oldold[4]=110
oldold[5]=666
oldold[6]=482
oldold[7]=738
oldold[8]=945
oldold["textindex"]=476

new_mass[0]=9
new_mass[1]=270
new_mass[2]=446
new_mass[3]=640
new_mass[4]=945
new_mass[5]=783
new_mass[6]=942
new_mass[7]=847
new_mass[8]=254
new_mass[9]=678

mass[23]=375
mass[45]=49
@em.maxVar('old_mass','new_mass','mass[23]','mass[45]')
! old_mass
*pl
@em.maxVar('old_mass_1,oldmass,old_mass_2,oldold/arr','new_mass/arr','mass[23]','mass[45]')
! old_mass
*pl
@em.maxVar('old_mass_1,oldmass,old_mass_2,oldold[1],oldold[13],oldold["textindex"]','new_mass','mass[23]','mass[45]')
!	old_mass_2
*pl
@em.maxVar('old_mass','new_mass','mass[23]','mass[45]','[list]')
! old_mass
*pl
@em.maxVar('old_mass_1,oldmass,old_mass_2,oldold/arr','new_mass/arr','mass[23]','mass[45]','[list]')
! old_mass
*pl
@em.maxVar('old_mass_1,oldmass,old_mass_2,oldold[1],oldold[13],oldold["textindex"]','new_mass','mass[23]','mass[45]','[list]')
!	old_mass_2
*pl
@em.maxVar('old_mass/arr')
!	old_mass[0]
*pl
@em.maxVar('old_mass/arr','[list]')
!	old_mass[0]
!	old_mass[2]
*pl
@em.maxVar('old_mass/arr','[list][min]')
!	old_mass[4]
!	old_mass[7]

