Функция получает тип переменной.
$args[0] - имя переменной/массива. Можно указывать название непосредственно переменной/массива, или конкретную ячейку масссива.
!@pp:if(em_gettype):include
# em.var.getType
if instr($args[0], '$')=1: $args[0]=$mid($args[0],2)
args['tuple']=dyneval("if $<<$args[0]>><>'' and instr($<<$args[0]>>,'')<>0: result=1 else result=0")
args['string']=dyneval("if $<<$args[0]>><>'': result=1 else result=0")
args['number']=dyneval("if <<$args[0]>><>0: result=1 else result=0")
if args['string'] and args['number'] and args['tuple']:
	$args['result']='both' & !@ в переменной содержатся оба типа данных. По сути это ошибка
elseif args['tuple']:
	$args['result']='tuple'	& !@ кортеж. Распознаётся в т.ч. и как текст
elseif args['string'] and no (args['number'] or args['tuple']):
	$args['result']='string' & !@ переменная содержит текстовое значение
elseif args['number'] and no args['string']:
	$args['result']='number' & !@ переменная содержит числовое значение
elseif no (args['string'] or args['number'] or args['tuple']):
	$args['result']='empty' & !@ переменная не содержит значений, либо содержит значения по-умолчанию
end
$result=$args['result']
--- em.var.getType ---
!@pp:endif

Функция не использует иных функций библиотеки. Не допускается использование локальных переменных.

$args['result']ult - в результате функция возвращает строку:
'both' - этот результат означает, что существуют как текстовое, так и числовое значение для указанной переменной. В плеерах версии 5.7.0 и ниже в одном массиве под одним и тем же индексом можно хранить как текстовое так и числовое значение. Например:
$varname[1]='text' & varname[1]=234
В этом случае функция вернёт строку 'both'
'tuple' - этот результат означает, что переменная содержит кортеж, или строку похожую на кортеж
'string' - этот результат означает, что переменная содержит только текстовое значение отличное от значения переменной по умолчанию.
'number' - этот результат означает, что переменная содержит только числовое значение отличное от значения переменной по умолчнаию.
'empty' - этот результат означает, что переменная не создана, либо содержит значение по умолчанию, текстовое и числовое.

$string='text'
number=123
$varname[0]='text' & varname[0]=123
$emptyvar[0]=''
emptyvar[1]=0
$tuple=(1,2,3)
! результат работы функции
$func('em.var.getType','$string')	& !@ 'string'
$func('em.var.getType','number')	& !@ 'number'
$func('em.var.getType','$number')	& !@ 'number'
$func('em.var.getType','string')	& !@ 'string'
$func('em.var.getType','$varname')	& !@ 'number'
$func('em.var.getType','$emptyvar[0]')	& !@ 'empty'
$func('em.var.getType','emptyvar[1]')	& !@ 'empty'
$func('em.var.getType','$tuple')	& !@ 'tuple'
