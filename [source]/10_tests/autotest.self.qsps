QSP-Game часть автотеста, отвечающая за сравнение
!@pp:if(em_autotest):include
# em.autotest.self
local $res, $example, $functions, $nr
$args[0]=$lcase($args[0])
$args[1]=$lcase($args[1])

!@ em.arr.desort
if instr($args[0], 'em.arr.desort') or $args[0]='':
	$functions[] = 'em.arr.desort'
	$example['em.arr.desort'] = "old_mass[0] = 257
old_mass[1] = 269
old_mass[2] = 293
old_mass[3] = 529
old_mass[4] = 561
old_mass[5] = 901
old_mass[6] = 913
old_mass[7] = 949
em_array[0] = 4
em_array[1] = 2
em_array[2] = 7
em_array[3] = 6
em_array[4] = 5
em_array[5] = 3
em_array[6] = 1
em_array[7] = 0
new_mass[0] = 949
new_mass[1] = 913
new_mass[2] = 269
new_mass[3] = 901
new_mass[4] = 257
new_mass[5] = 561
new_mass[6] = 529
new_mass[7] = 293"
end

!@ em.arr.desort
if instr($args[0], 'em.arr.sort') or $args[0]='':
	$functions[] = 'em.arr.sort'
	$example['em.arr.sort'] = "old_mass[0] = 157
old_mass[1] = 250
old_mass[2] = 413
old_mass[3] = 532
old_mass[4] = 565
old_mass[5] = 709
old_mass[6] = 730
old_mass[7] = 779
old_mass[0] = 118
old_mass[1] = 132
old_mass[2] = 304
old_mass[3] = 678
old_mass[4] = 796
old_mass[5] = 812
old_mass[6] = 901
old_mass[7] = 966
em_array[0] = 5
em_array[1] = 7
em_array[2] = 3
em_array[3] = 4
em_array[4] = 2
em_array[5] = 1
em_array[6] = 6
em_array[7] = 0
%old_mass[0] = [967,'голова']
%old_mass[1] = [629,'плечи']
%old_mass[2] = [541,'руки']
%old_mass[3] = [290,'торс']
%old_mass[4] = [852,'бёдра']
%old_mass[5] = [334,'голени']
%old_mass[6] = [318,'ступни']
%old_mass[7] = [529,'нишваа']
em_array[0] = 3
em_array[1] = 6
em_array[2] = 5
em_array[3] = 7
em_array[4] = 2
em_array[5] = 1
em_array[6] = 4
em_array[7] = 0
%new_mass[0] = [290,'торс']
%new_mass[1] = [318,'ступни']
%new_mass[2] = [334,'голени']
%new_mass[3] = [529,'нишваа']
%new_mass[4] = [541,'руки']
%new_mass[5] = [629,'плечи']
%new_mass[6] = [852,'бёдра']
%new_mass[7] = [967,'голова']
$mass[0] = 'ffffff'
$mass[1] = 'fff8f8'
$mass[2] = 'ff00ff'
$mass[3] = '88ff88'
$mass[4] = '8888ff'
$mass[5] = '0ff0f8'
em_array[0] = 3
em_array[1] = 5
em_array[2] = 1
em_array[3] = 0
em_array[4] = 4
em_array[5] = 2"
end

!@ em.arr.simpl
if instr($args[0],'em.arr.simpl')<>0 or $args[0]='':
	$functions[]='em.arr.simpl'
	$example['em.arr.simpl']="101"
end

!@ em.byte.add
if instr($args[0],'em.byte.add')<>0 or $args[0]='':
	$functions[]='em.byte.add'
	$example['em.byte.add']="999038[not a number]006273004479"
end
!@ em.byte.dev
if instr($args[0],'em.byte.dev')<>0 or $args[0]='':
	$functions[]='em.byte.dev'
	$example['em.byte.dev']="998492998432993726992932"
end
!@ em.fewarrs.print
if instr($args[0],'em.fewarrs.print')<>0 or $args[0]='':
$functions[]='em.fewarrs.print'
$example['em.fewarrs.print']="<table border=1 cellpadding=5><tr><td>#</td><td>$a</td><td>%b</td></tr><tr><td>0</td><td>нулевая ячейка</td><td>[0,'zero']</td></tr><tr><td>1</td><td>первая ячейка</td><td>['first',1,0]</td></tr><tr><td>2</td><td>вторая ячейка</td><td>[2,'second',2]</td></tr><tr><td>3</td><td>&nbsp;</td><td>['3']</td></tr><tr><td>4</td><td>четвёртая' ячейка</td><td>[3,5,6,'string',6]</td></tr><tr><td>5</td><td>пятая яче'йка</td><td>['пятая ячейка']</td></tr><tr><td>6</td><td>&nbsp;</td><td>['6']</td></tr><tr><td>7</td><td>седьмая ячейка</td><td>['7']</td></tr></table><table border=1 cellpadding=5><tr><td>#</td><td>$a</td><td>%b</td></tr><tr><td>3</td><td>&nbsp;</td><td>['3']</td></tr><tr><td>4</td><td>четвёртая' ячейка</td><td>[3,5,6,'string',6]</td></tr><tr><td>5</td><td>пятая яче'йка</td><td>['пятая ячейка']</td></tr><tr><td>6</td><td>&nbsp;</td><td>['6']</td></tr></table>нулевая ячейка	[0,'zero']
первая ячейка	['first',1,0]
вторая ячейка	[2,'second',2]
	['3']
четвёртая' ячейка	[3,5,6,'string',6]
пятая яче'йка	['пятая ячейка']
	['6']
седьмая ячейка	['7']$a[0]='нулевая ячейка'	&	%b[0]=[0,'zero']
$a[1]='первая ячейка'	&	%b[1]=['first',1,0]
$a[2]='вторая ячейка'	&	%b[2]=[2,'second',2]
$a[3]=''	&	%b[3]=['3']
$a[4]='четвёртая'' ячейка'	&	%b[4]=[3,5,6,'string',6]
$a[5]='пятая яче''йка'	&	%b[5]=['пятая ячейка']
$a[6]=''	&	%b[6]=['6']
$a[7]='седьмая ячейка'	&	%b[7]=['7']EMPTY ARRAYS"
end
!@ em.simpl
if instr($args[0],'em.simpl')<>0 or $args[0]='':
$functions[]='em.simpl'
$example['em.simpl']="9.05
9.05
10
9.55
9.999
1.3
-1.3
1.69
1.69
"
end

!@ em.round
if instr($args[0],'em.round')<>0 or $args[0]='':
$functions[]='em.round'
$example['em.round']="945.5
945.4
945.5
945.46
945.459
945
950
900
-950
-945.46
"
end

!@ em.mult
if instr($args[0],'em.mult')<>0 or $args[0]='':
$functions[]='em.mult'
$example['em.mult']="96
-81.9025
90.5
799.454375
-988.911099
512
-512
"
end
!@ em.div
if instr($args[0],'em.div')<>0 or $args[0]='':
$functions[]='em.div'
$example['em.div']="-1.0055
-1
0.905
0.9476
0.999
0.999099
-1.3
1.3
1.3
-1.3
"
end
!@ em.add
if instr($args[0],'em.add')<>0 or $args[0]='':
$functions[]='em.add'
$example['em.add']="0.05
0
18.05
27.85
29.889
480.184
409
157
-157
-409
3484766.2109697
"
end
!@ em.sqrt
if instr($args[0],'em.sqrt')<>0 or $args[0]='':
$functions[]='em.sqrt'
$example['em.sqrt']="31.6227
4
16.03121
16.0312
16.031
16.03
1.44
16.09
16.12
1.3
0.8306
"
end

!@ em.arr.print
if instr($args[0],'em.arr.print')<>0 or $args[0]='':
$functions[]='em.arr.print'
$example['em.arr.print']="$a[0] = 'нулевая ячейка'
$a[1] = '   первая ячейка   '
$a[2] = ' вторая ячейка'
$a[3] = ''
$a[4] = '[1,2,3,5,6]'
$a[5] = '   пятая ячейка'
$a[6] = ''
$a[7] = 'седьмая ячейка'
нулевая ячейка
   первая ячейка   
 вторая ячейка

[1,2,3,5,6]
   пятая ячейка

седьмая ячейка
$a[0] = 'нулевая ячейка'
$a[1] = 'первая ячейка'
$a[2] = 'вторая ячейка'
$a[3] = ''
$a[4] = '[1,2,3,5,6]'
$a[5] = 'пятая ячейка'
$a[6] = ''
$a[7] = 'седьмая ячейка'
вторая ячейка||[1,2,3,5,6]|пятая ячейка
вторая ячейка||[1,2,3,5,6]|пятая ячейка|
"
end
!@ em.arr.insert
if instr($args[0],'em.arr.insert')<>0 or $args[0]='':
$functions[]='em.arr.insert'
$example['em.arr.insert']="mass[0] = 574
mass[1] = 668
mass[2] = 413
mass[3] = 765
mass[4] = 6
mass[5] = 478
mass[6] = 205
mass[7] = 701
mass[8] = 272"
end
!@ em.arr.insert
if instr($args[0],'em.hex.add')<>0 or $args[0]='':
$functions[]='em.hex.add'
$example['em.hex.add']="ffefa0
ff
100
fff
ff0
aaab76
"
end
!@ em.arr.clear
if instr($args[0],'em.arr.clear')<>0 or $args[0]='':
$functions[]='em.arr.clear'
$example['em.arr.clear']="i[0] = 1
i[1] = 3
i[2] = 1
i[3] = 3
i[4] = 1"
end

!@ em.zero
if instr($args[0],'em.zero')<>0 or $args[0]='':
$functions[]='em.zero'
$example['em.zero']="0000000000000
1111111111111
10101010101010101010101010
aaaaaaaaaaaaa
blablabla
"
end
!@ em.str.in_arr
!@ if instr($args[0],'em.str.in_arr')<>0 or $args[0]='':
!@ $functions[]='em.str.in_arr'
!@ $example['em.str.in_arr']="0"
!@ end
!@ em.str.thin
if instr($args[0],'em.str.thin')<>0 or $args[0]='':
$functions[]='em.str.thin'
$example['em.str.thin']="п р о ф е с с у р а
п|р|о|ф|е|с|с|у|р|а
п|р|о|ф|е|с|с|у|р|а|
|п|р|о|ф|е|с|с|у|р|а
|п|р|о|ф|е|с|с|у|р|а|
про|фес|сур|а
п|роф|есс|ура
|про|фес|сур|а
пр|оф|ес|су|ра|
||п||р||о||ф||е||с||с||у||р||а||
"
end

if instr($args[0], 'em.var.get_type') <> 0 or $args[0] = '':
	$functions[]= 'em.var.get_type'
	$example['em.var.get_type'] = "[str][num][num][][][str][tpl]"
end

if instr($args[0], 'em.tag.get_num') <> 0 or $args[0] = '':
	$functions[]= 'em.tag.get_num'
	$example['em.tag.get_num'] = "[текст с пробелом][68][непробельные_символы][ff8899][многа букав][][ff8899]"
end

*pl "Start of Autotest." & wait 500
loop local i,size=0,arrsize('$functions') while i<size step i+=1:
	if loc($functions[i]):
		*pl "Function '<<$functions[i]>>' is exist."
		wait 500
		$res=@em.autotest($functions[i])
		if $res=$example[$functions[i]]:
			*pl "Autotest of '<<$functions[i]>>' completed. All Ok!"
			wait 500
		else
			*pl "Autotest Error. Dif Result:"
			usehtml = 1
			*pl "<table border=1 cellspacing=5><tr><td>Еxpected results:</td><td>Obtained results:</td></tr><tr><td><<@em.html.to_mnemonics($example[$functions[i]])>></td><td><<@em.html.to_mnemonics($res)>></td></tr></table>"
			if $args[1]='compile':
				local $f,$r
				loop local j,size=1,max(len($example[$functions[i]]),len($res)) while j<=size step j+=1:
					$f=$mid($example[$functions[i]],j,1)
					$r=$mid($res,j,1)
					if $f<>$r: *pl "[<<j>>]<<$f>>	<<$r>> "
				end
			end
			wait 500
		end
	else
		*pl "Function '<<$functions[i]>>' doesn't exist. Location not found."
		wait 500
	end
end
*pl "End of Autotest."
- em.autotest.self
!@pp:endif
