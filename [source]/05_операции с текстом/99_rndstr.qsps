QSP-Game Возвращает строку случайных символов
args[0] - необходимая длина строки. Если не задана, выбирается случайным образом от 1 до 8 символов. Только число
$args[1] - символы, которых не должно быть в строке, либо управляющая конструкция. Только текст.
$args[2] - символы, которые должны быть добавлены к строке
!@pp:if(em_rndstr):include
# #rndstr#
if args[0]=0: args[0]=rand(1,8)
$args[9]=$args[9]	& !@ инициализируем аргументы
$args['symbols']=""	& !@ инициализируем переменную symbols
if $strfind($args[1],'(?i)\[inc(lude)?\]')<>'':
	$args[1]=$lcase($args[1])
	if instr($args[1],'[\all]')<>0 or instr($args[1],'[\d]')<>0: $args['symbols']+='1234567890'
	if instr($args[1],'[\all]')<>0 or instr($args[1],'[\h]')<>0: $args['symbols']+='1234567890abcdef'
	if instr($args[1],'[\all]')<>0 or instr($args[1],'[\s]')<>0: $args['symbols']+='	 '
	if instr($args[1],'[\all]')<>0 or instr($args[1],'[\w]')<>0:
		!@ буквы
		$args['symbols']+='QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm'
		$args['symbols']+='ЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮёйцукенгшщзхъфывапролджэячсмитьбю'
		!@ цифры и символ подчёркивания
		$args['symbols']+='1234567890_'
	end
	if instr($args[1],'[\all]')<>0 or instr($args[1],'[\я]')<>0:
		$args['symbols']+='ЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮёйцукенгшщзхъфывапролджэячсмитьбю'
	end
	if instr($args[1],'[\all]')<>0 or instr($args[1],'[\z]')<>0:
		$args['symbols']+='QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm'
	end
	if instr($args[1],'[ucase]')<>0: $args['symbols']=$ucase($args['symbols'])
	if instr($args[1],'[lcase]')<>0: $args['symbols']=$lcase($args['symbols'])
	$args[1] = ''
elseif $strfind($args[1],'(?i)\[only this\]')<>'' or $strfind($args[1],'(?i)\[ot\]')<>'':
	$args[1]=$lcase($args[1])
	$args[1] = ''
else
	$args['symbols']='QWERTYUIOP{}ASDFGHJKL:"ZXCVBNM<>?1234567890'
	$args['symbols']+="!@#$%^&*()_+-=`~qwertyuiop[]asdfghjkl;'zxcvbnm,./\|№"
	$args['symbols']+="ёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ"
end
!@ следующий алгоритм удаляет исключаемые символы из набора, так же удаляет повторяющиеся символы
:for
if len($args['symbols'])>0:
	!@ цикл выполняется, пока не перебрали весь набор символов
	$args['1']=$mid($args['symbols'],1,1)	& !@ вырезаем первый символ из набора
	!@ проверяем присутствует ли данный символ в наборе $args[1]
	if instr($args[1],$args['1'])=0:
		!@ если символа в наборе запрещённых нет
		$args['new_symbols']+=$args['1']	& !@ добавляем символ к новому набору
	end
	$args['symbols']=$replace($args['symbols'],$args['1'])	& !@ удаляем символ из старого набора (и дубликаты тоже)
	jump 'for'
end
$args['symbols']=$args['new_symbols']
if $args[2]<>'': $args['symbols']+=$args[2]
:while
if args[0]>0:
	$result['rndstr']+=($mid($args['symbols'],rand(1,len($args['symbols'])),1))
	args[0]-=1
	if args[0]>0: jump 'while'
end
--- #rndstr# ---------------------------------
!@pp:endif
Функция не использует иных функций библиотеки

Управляющие конструкции передаются в $args[1]:
[include] или [inc] - указывает, что нужно включить в набор только указанные предопределённые группы символов. Для указания групп используются:
	[\d] - включить цифры
	[\h] - включить шестнадцатеричные цифры
	[\s] - включить пробел и символ табуляции
	[\w] - включить буквы, цифры и символ подчёркивания (в т.ч. кириллица)
	[\я] - включить кириллические символы
	[\z] - включить латинские символы
	[\all] - все выше перечисленные наборы символов
	Пример: [inc][\d][\z] - цифры и латинские буквы
	Дополниельно с этим можно использовать трансляцию регистра:
	[lcase] - перевести все символы в нижний регистр (только для букв)
	[ucase] - перевести все символы в верхний регистр (только для букв)
[only this] или [ot] - указывает, что в набор нужно включить только символы, перечисленные в $args[2]