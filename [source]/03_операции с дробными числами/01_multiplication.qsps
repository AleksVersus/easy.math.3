QSP-Game Перемножает несколько чисел любой длины.
$args[0] ... $args[8] - девять множителей. Могут быть переданы в числовом виде (для QSP 5.7.0 в пределах [-2147483648 ... 2147483647]).
$result - всегда текстовое значение.
!@pp:if(em_multiply):include
# #*#
!@ следующий цикл инициализирует числа
args['size']=arrsize('args')	& !@ получаем число переданных аргументов
:initial
if args['i']<args['size']:
	if len($args[args['i']])=0:
		!@ если передано не строковое значение, значит передано числовое
		$args[args['i']]=$str(args[args['i']])
	else
		!@ если передано строковое значение, оаставляем его
		$args[args['i']]=$args[args['i']]
	end
	if $args[args['i']]='0': $result='0' & exit	& !@ если передан нуль, то результат равен нулю, выходим
	!@ убираем минус из числа
	if instr($args[args['i']],'-')=1:
		$args[args['i']]=$mid($args[args['i']],2)
		args['minus']=1-args['minus']	& !@ помечаем наличие минуса в числе
	end
	!@ убираем точку из числа
	if instr($args[args['i']],'.')<>0:
		args['dot']=instr($args[args['i']],'.')	& !@ вхождение точки
		args['float']+=len($args[args['i']])-args['dot']	& !@ число знаков после точки
		$args[args['i']]=$replace($args[args['i']],'.')
	end
	args['i']+=1
	jump 'initial'
end
!@ следующий цикл перемножает числа по порядку
args['i']=1	& !@ счёт начинаем с первого аргумента
$args['произведение.результат']=$args[0]	& !@ результат приравниваем к нулевому аргументу
:next_number
if args['i']<args['size']:
	!@ цикл выполняется, пока счётчик не достигнет числа аргументов
	!@ теперь нам нужно сделать следующее. Разложить множитель на отдельные цифры по разрядам
	!@ каждую цифру умножить на новое произведение, затем суммировать результаты
	args['второй_множитель.разряд']=len($args[args['i']])	& !@ множителем является очередное число в аргументе
	$args['последнее_перемножение']=''	& !@ последнее перемножение равно пустому значению
	:next_digit
	if args['второй_множитель.разряд']>0:
		!@ цикл выполняется, пока не переберём каждый разряд, начиная с конца
		args['второй_множитель.число']=val($mid($args[args['i']],args['второй_множитель.разряд'],1))
		!@ в этом цикл открываем ещё один цикл. Здесь перебираются разряды первого множителя - произведения от предыдущих перемножений
		args['первый_множитель.разряд']=len($args['произведение.результат'])	& !@ номер последней цифры численно совпадает с длиной строки
		$args['перемножение.очередное']=''
		args['переполнение']=0
		:next_multiply
		if args['первый_множитель.разряд']>0:
			!@ цикл выполняется, пока не достигент нуля. Т.е пока не переберём все разряды
			args['первый_множитель.число']=val($mid($args['произведение.результат'],args['первый_множитель.разряд'],1))
			!@ перемножаем числа и прибавляем к ним остаток от предыдущего умножения
			args['перемножение.итеррация']=args['первый_множитель.число']*args['второй_множитель.число']+args['переполнение']
			!@ получаем цифру
			args['перемножение.цифра']=(args['перемножение.итеррация'] mod 10)
			!@ получаем остаток в переполнение
			args['переполнение']=args['перемножение.итеррация']/10
			!@ набираем число
			$args['перемножение.очередное']=$str(args['перемножение.цифра'])+$args['перемножение.очередное']
			args['первый_множитель.разряд']-=1
			jump 'next_multiply'
		end
		!@ когда число набрано, не забываем добрать его переполнением
		if args['переполнение']>0: $args['перемножение.очередное']=$str(args['переполнение'])+$args['перемножение.очередное']
		!@ теперь когда у нас есть число, приводим его к разряду
		$args['перемножение.очередное']+=$func('#zero#',len($args[args['i']])-args['второй_множитель.разряд'])
		!@ теперь, когда у нас есть число приведённое к разряду, прибавляем число к предыдущему
		$args['последнее_перемножение']=$func('#add#',$args['последнее_перемножение'],$args['перемножение.очередное'])
		args['второй_множитель.разряд']-=1
		jump 'next_digit'
	end
	!@ последнее перемножение становится произведением
	$args['произведение.результат']=$args['последнее_перемножение']
	args['i']+=1
	jump 'next_number'
end
!@ назначаем знак
if args['minus']=1: $args['+']='-' else $args['+']=''
!@ теперь назначаем точку
$args['float_result']=$mid($args['произведение.результат'],len($args['произведение.результат'])-args['float']+1)
$args['int_result']=$mid($args['произведение.результат'],1,len($args['произведение.результат'])-args['float'])
if $args['float_result']<>'':
	$result=$args['+']+$func('#dz#',$args['int_result']+'.'+$args['float_result'])
else
	$result=$args['+']+$func('#dz#',$args['int_result'])
end
--- #*# ---------------------------------
!@pp:endif

Функция использует функции #dz#, #zero#, #add#

!@pp:if(em_multiply!=True):nopp
!@pp:var(em_dz)
!@pp:var(em_zstr)
!@pp:var(em_add)
!@pp:endif