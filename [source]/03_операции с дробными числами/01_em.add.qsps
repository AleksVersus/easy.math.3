QSP-Game Функция сложения. Может суммировать целые и дробные числа любого знака любой длины (ограничение на значение текстовых переменных для QSP 5.7.0 около 2Гб).
!@ $0 - ... $18 - до девятнадцати слагаемых. Могут быть переданы в числовом виде (для QSP 5.8.0 в пределах [-2147483648 ... 2147483647]).
!@ $r - всегда текстовое значение.

!@pp:if(em_add):include
# em.add
local $int_, $fract_, $minus_, int_len_, fract_len_, $nines_
local $number_, $summ_
!@ инициализация чисел
loop local i,b,size_=0,-1,arrsize('args') while i<size_ step i+=1:
	if $args[i]='' and args[i]<>0:
		!@ если передана не строка, а число, переводим число в строку
		$args[i]=$str(args[i])
	end
	if $args[i]<>'' and $strfind($args[i],'^0+(\.0+)?$')='':
		b+=1	& !@ счётчик найденных чисел
		!@ если передана строка, и дробное число в ней не равно нулю
		if instr($args[i],'-')=1:
			!@ если в числе есть знак минус, помечаем число минусом
			$minus_[b]='-'
			$args[i]=$mid($args[i],2)
		else
			$minus_[b]=''
			$args[i]=$args[i]
		end
		!@ если в числе есть точка, разделяем число на целую и дробную часть
		if instr($args[i],'.')<>0:
			$int_[b]=$mid($args[i],1,instr($args[i],'.')-1)
			$fract_[b]=$mid($args[i],instr($args[i],'.')+1)
		else
			$int_[b]=$args[i]
			$fract_[b]='0'
		end
		!@ если длина числа больше максимальной, записываем в максимальные эту длину
		if len($int_[b])>int_len_: int_len_=len($int_[b])
		if len($fract_[b])>fract_len_: fract_len_=len($fract_[b])
	end
end
!@ увеличиваем число разрядов в числе, чтобы избежать различных эксцессов
int_len_+=2
fract_len_+=2
!@ следующий цикл приводит число к целому для сложения с переполнением
$nines_=@em.zero(int_len_+fract_len_,'9')
loop local i,b=0,arrsize('$int_') while i<b step i+=1:
	$number_[i]=@em.zero(int_len_-len($int_[i]))+$int_[i]+$fract_[i]+@em.zero(fract_len_-len($fract_[i]))
	if $minus_[i]='-':
		$number_[i]=@em.byte.dev($nines_,$number_[i])
	end
end
!@ следующий цикл - суммирование чисел
$summ_=@em.zero(int_len_+fract_len_)
loop local i,b=0,arrsize('$int_') while i<b step i+=1:
	$summ_=@em.byte.add($summ_,$number_[i])
end
!@ ВНИМАНИЕ. Повторное использование локальных переменных
if instr($summ_,'9')=1:
	$summ_=@em.byte.dev($nines_,$summ_)
	$minus_='-'
else
	$summ_=$summ_
	$minus_=''
end
$result=@em.dz($minus_+$mid($summ_,1,int_len_)+"."+$mid($summ_,int_len_+1))
--- em.add ---------------------------------
!@pp:endif

$int_, $fract_, $minus_ - целая и дробная части числа, а так же его знак
int_len_, fract_len_ - длина целой и дробной части числа
$nines_ - добивочные девятки
$number_ - число приведено к целому в строковом представлении
$summ_ - сумма

Функция использует функции em.byte.add, em.byte.dev, em.zero, em.dz

!@pp:if(em_add!=True):nopp
!@pp:var(em_dz)
!@pp:var(em_zero)
!@pp:var(em_byte_add)
!@pp:var(em_byte_dev)
!@pp:endif

@em.add('9.05','-9')							& !@ '0.05'
@em.add('9.05','-9.05')							& !@ '0'
@em.add('9.05','9')								& !@ '18.05'
@em.add('9.05','9.55','9.25')					& !@ '27.85'
@em.add('9.99','9.999','9.9')					& !@ '29.889'
@em.add('384.384','92.8',3)						& !@ '480.184'
@em.add('283','126')							& !@ '409'
@em.add('283','-126')							& !@ '157'
@em.add('-283','126')							& !@ '-157'
@em.add('-283','-126')							& !@ '-409'
@em.add('-234','125','-13.7890303','3484889')	& !@ '3484766.2109697'
