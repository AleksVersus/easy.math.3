Game-QSP поиск максимального или минимального значения в массиве. В отличие от функций MAX и MIN можно указать область и пределы поиска, а так же запросить позицию найденного элемента. Если ни одно число по указанным параметрам не подходит, функция возвращает слово false.

$args[0] - название массива.
$args[1] - управление:
	* [max] - поиск максимального значения (по умолчанию),
	* [min] - поиск минимального значения.
	* [pos] - если указано, в результат будет возвращена позиция элемента, в противном случае - значение.
	* [all] - выводит позицию и значение в кортеже (pos,value)
$args[2] - нижний предел числа (по умолчанию минимальное число в массиве). Внимание! Для определения границы используются текстовые значения.
$args[3] - верхний предел числа (по умолчанию максимальное число в массиве). Внимание! Для определения границы используются текстовые значения.
 args[4] - от какого элемента вести поиск (по умолчанию от нулевого).
 args[5] - до какого элемента вести поиск (по умолчанию до последнего).
!@pp:if(em_arr_find):include
# em.arr.find
if $args[0]='': $result='error' & exit
$args[1]=$lcase($args[1])
if instr($args[1],'[min]')=0: $args[1]+='[max]'
if $args[2]='':	args[2]=min($args[0]) else args[2]=val($args[2])
if $args[3]='': args[3]=max($args[0]) else args[3]=val($args[3])
if args[4] < 0: args[4]=0
if args[5] = 0: args[5]=arrsize($args[0])-1
$args[9]=$args[9]	& !@ инициализация аргументов
if args[2]>args[3]:
	!@ если максимально и минимальное значения перепутаны местами, меняем их местами
	args['t']=args[2]
	args[2]=args[3]
	args[3]=args['t']
end
if args[4]>args[5]:
	!@ если границы перепутаны, меняем местами
	args['t']=args[4]
	args[4]=args[5]
	args[5]=args['t']
end
$args['result']='false'	& !@ результат по умолчанию
local easy_math_copy_array
copyarr 'easy_math_copy_array',$args[0]
loop while no args[4]>args[5] step args[4]+=1:
	!@ args[4] - выступает счётчиком. Пока счётчик не превысит верхнюю границу, выполняем
	if easy_math_copy_array[args[4]]>=args[2] and easy_math_copy_array[args[4]]<=args[3]:
		!@ следующий фрагмент кода не упрощается.
		if instr($args[1],'[max]')<>0:
			!@ если ищем максимальное значение
			if (args['m']=0 and $args['result']='false') or easy_math_copy_array[args[4]]>args['m']:
				!@ если рассматриваемое значение больше найденного, или это первая итеррация
				args['m']=easy_math_copy_array[args[4]]	& !@ присваиваем промежуточной переменной найденное значение
				args['pos']=args[4]	& !@ переменной pos присваиваем позицию элемента
				$args['result']='true'	& !@ переменной result возвращаем true
			end 
		elseif instr($args[1],'[min]')<>0:
			!@ если ищем минимальное, всё то же, что и для максимального значения, только проверяем, не меньше ли текущее
			if (args['m']=0 and $args['result']='false') or easy_math_copy_array[args[4]]<args['m']:
				args['m']=easy_math_copy_array[args[4]]
				args['pos']=args[4]
				$args['result']='true'
			end 
		else
			!@ ТАКОЙ СИТУАЦИИ БЫТЬ НЕ МОЖЕТ
			$result='easy.math''s error. Please, tell me about it: aleksversus@mail.ru'
			exit
		end
	end
end
if instr($args[1],'[all]')<>0 and $args['result']='true':
	!@ если выводим и позицию и число, то в таком формате
	$result=(args['pos'],args['m'])
elseif instr($args[1],'[pos]')<>0 and $args['result']='true':
	!@ если искали позицию, возвращаем позицию
	$result=$str(args['pos'])
elseif $args['result']='true':
	!@ если не искали позицию, возвращаем значение
	$result=$str(args['m'])
else
	$result='false'
end
--- em.arr.find ---------------------------------
!@pp:endif

Функция не использует иных функций библиотеки

mass[0]=574
mass[1]=668
mass[2]=413
mass[3]=765
mass[4]=478
mass[5]=205
mass[6]=701
mass[7]=272

@em.arr.find('mass','[max]')	& !@ '765'
@em.arr.find('mass','[max]','','',0,2)	& !@ '668'
@em.arr.find('mass','[min]','400','600')	& !@ '413'
@em.arr.find('mass','[min]','400','600',3,6)	& !@ '478'
@em.arr.find('mass','[min][pos]','400','600',3,6)	& !@ '4'
@em.arr.find('mass','[min]','900','1000',3,6)	& !@ 'false'
