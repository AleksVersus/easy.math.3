QSP-Game Заполняет массив порядковыми числами
$args[0]- название массива, элементы которого необходимо сформировать (исследуемый массив), обязательный параметр
args[1] - Сколько элементов необходимо заполнить, обязательный параметр
args[2] - верхняя граница чисел. До какого числа вести заполнение.
args[3] - нижняя граница чисел. С какого числа начинать заполнение.
args[4] - с какого элемента начинать заполнение.
!@pp:if(em_array_strt):include
# #array.strt#
args[9] = args[9]	& !@ инициализация аргументов
if args[2]<args[3]:
	!@ если верхняя и нижняя границы чисел перепутаны,
	$args['reverse']='yes'	& !@ включается режим заполнения массива в обратном порядке
end
args['b']=args[3]	& !@ выставляем первое вносимое в массив число
if instr($args[0],'$')=1: $args['q']="'"	& !@ если массив текстовый, вносим текстовые значения
args[1]+=args[4]	& !@ по args[1] определяем верхнюю границу номера элемента (не включительно)
:for
if args[4]<args[1]:
	!@ args[4] выступает счётчиком, и пока счётчик не достигнет args[1] присваиваем значения:
	dynamic "<<$args[0]>>[<<args[4]>>]=<<$args['q']>><<args['b']>><<$args['q']>>"
	args[4]+=1	& !@ увеличиваем счётчик
	!@ в зависимости от направления заполнения, увеличиваем или уменьшаем значение
	if $args['reverse']<>'yes':
		args['b']+=1
		if args['b']>args[2] and (args[2]<>0 or args[3]<>0): args['b']=args[3]
	else
		args['b']-=1
		if args['b']<args[2] and (args[2]<>0 or args[3]<>0): args['b']=args[3]
	end
	jump 'for'
end
--- #array.strt# ---------------------------------
!@pp:endif

Функция не использует иных функций библиотеки