QSP-Game возвращает содержимое массива

!@ $0 - название массива. Тип выводимых значений определяется по префиксу типа
!@ $1 - управляющая конструкция. См. ниже.
!@ %2 - [начало, окончание] вывода. Номера элементов массива.
!@ $3 - разделитель. По умолчанию перенос строки. Если разделитель не нужен, указывается /se.
!@pp:if(em_arr_print):include
# em.arr.print
args[21], args[22] = %iif(%args[2] = [] and arrsize($args[0])<>0, [0, arrsize($args[0])-1], %args[2])
if (args[22] < 0 or args[21] < 0): exit
!@pp:if(em_fuse):include
if $args[0]='': msg 'em.arr.print: No array name → <<$args[0]>>' & exit
if args[22] < args[21] or args[21] < 0: msg 'em.arr.print: Out of range → <<[args[21], args[22]]>>' & exit
!@pp:endif
local em_arr_print_copy_array_	& !@ объявляем локальный массив для хранения выводимых значений
copyarr 'em_arr_print_copy_array_', $args[0], args[21], args[22] - args[21] + 1	& !@ копируем значения в локальный массив
!@ инициализируем локальные переменные
$args[1] = $lcase($args[1])	& !@ переводим команды в нижний регистр
if $args[3] = '': $args[3] = @em.RN	& !@ если $args[3] не указано, в качестве разделителя использует символ переноса строки
if $args[3] = '/se': $args[3] = ''	& !@ если указан ключ,разделитель не используется

$args[23] = $iif(instr('$%', $mid($args[0], 1, 1)),  $mid($args[0], 1, 1), '')
args[24] = iif(instr($args[1], '[only result]'), 1, 0)
loop local i, size_ = 0, arrsize('em_arr_print_copy_array_') while i<size_ step i+=1:
	!@ если не указано, что нужно вывести только значения массивов, к выводимым значениям добавляется название массива и номер ячейки
	if no args[24]: $result += $args[0] + "[<<i+args[21]>>] = "
	if $args[23] = '%':
		$result += $str(%em_arr_print_copy_array_[i])
	elseif $args[23] = '$':
		$args[25] = $em_arr_print_copy_array_[i]
		if instr($args[1], '[trim]'): $args[25] = $trim($args[25])
		if no args[24]:
			$args[25] = $replace($args[25], $quotes_, "''")
			$result += "'<<$args[25]>>'"
		else:
			$result += $args[25]
		end
	else:
		!@ если пытаемся получить число, просто вписываем его
		$result += $str(em_arr_print_copy_array_[i])
	end
	if instr($args[1], '[with last]') or i <> size_-1:
		$result += $args[3]
	end
end
--- em.arr.print ---------------------------------
!@pp:endif

!@pp:if(em_arr_print!=True):nopp
!@pp:var(em_rn)
!@pp:endif

!@ $1 - управляющая конструкция. Можно использовать три команды в любых комбинациях:
	* [only result] - выводит только содержимое массива, не показывая его названия и номера ячеек.
	* [trim] - отсекает прилегающие пробелы и символы табуляции при выводе значения элемента массива.
	* [with last] - добавляет разделитель к выводу последнего элемента.

!@ #21 - с какой ячейки начинаем вывод %3[1]
!@ #22 - до какой ячейки продолжаем вывод %3[2]
!@ $23 - тип массива (выводимых значений)
!@ #24 - only_result маркер. Выводить только содержимое ячеек?
!@ $25 - хранение промежуточных результатов

$a[]='нулевая ячейка'
$a[]='   первая ячейка   '
$a[]=' вторая ячейка'
$a[]=''
$a[]=(1,2,3,5,6)
$a[]='   пятая ячейка'
$a[]=''
$a[]='седьмая ячейка'

@em.arr.print('$a')
@em.arr.print('$a','[only result]')
@em.arr.print('$a','[trim]')
@em.arr.print('$a','[trim] [only result]',[2,5],'|')
@em.arr.print('$a','[trim] [only result] [with last]',[2,5],'|')

